import sqlite3
import telebot
from telebot import types
import random
import requests

# ========================= –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø =========================
TOKEN = "TELEGRAM_BOT_TOKEN"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
DATABASE_PATH = 'db/bio_game.db'

bot = telebot.TeleBot(TOKEN)
bot.battle_state = {}  # {user_id: True/False}

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
conn = sqlite3.connect(DATABASE_PATH, check_same_thread=False)
cursor = conn.cursor()

# ========================= –ö–õ–ê–°–° –î–õ–Ø –ú–û–ù–°–¢–†–û–í =========================
class Monster:
    def __init__(self, id, name, power_base, hp_base, immu_base, level_modifier, description, photo_url, experience_reward, hp_reward, immu_reward):
        self.id = id
        self.name = name
        self.power_base = power_base
        self.hp_base = hp_base
        self.immu_base = immu_base
        self.level_modifier = level_modifier
        self.description = description
        self.photo_url = photo_url
        self.experience_reward = experience_reward
        self.immu_reward = immu_reward  # –î–æ–±–∞–≤–ª—è–µ–º immu_reward
        self.hp_reward = hp_reward  # –î–æ–±–∞–≤–ª—è–µ–º hp_reward
        self.power = 0
        self.hp = 0

    def calculate_stats(self, player_level):
        """–í—ã—á–∏—Å–ª—è–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –º–æ–Ω—Å—Ç—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –∏–≥—Ä–æ–∫–∞."""
        self.power = int(self.power_base + (player_level - 1) * 0.8 * self.level_modifier)
        self.hp = int(self.hp_base + (player_level - 1) * 2.5 * self.level_modifier)
        self.immu = int(self.immu_base + (player_level - 1) * 0.15 * self.level_modifier)
        self.immu = min(self.immu, 10)

    def get_description(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –º–æ–Ω—Å—Ç—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∏–≥—Ä–µ."""
        return (f"{self.name}:\n"
                f"  *–°–∏–ª–∞: {self.power}*\n"
                f"  *–ó–¥–æ—Ä–æ–≤—å–µ: {self.hp}*\n"
                f"  *–ò–º–º—É–Ω–∏—Ç–µ—Ç: {self.immu}*\n"
                f" –û–ø–∏—Å–∞–Ω–∏–µ: {self.description}")

# ========================= –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ë–î =========================

def db_table_val(user_id: int, user_name: str, user_surname: str, username: str, chat_id: int):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î."""
    try:
        cursor.execute(
            'INSERT INTO test (user_id, user_name, user_surname, username, chat_id) VALUES (?, ?, ?, ?, ?)',
            (user_id, user_name, user_surname, username, chat_id)
        )
        conn.commit()
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î: {e}")

def check_user_exists(username: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î."""
    try:
        cursor.execute("SELECT EXISTS (SELECT 1 FROM test WHERE username=?)", (username,))
        result = cursor.fetchone()
        return result[0] == 1
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return False

def hero_stats(us_id: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥–µ—Ä–æ—è."""
    try:
        cursor.execute("SELECT hero_name, power, hp, immu, level, experience FROM test WHERE user_id = ?", (us_id,))
        stats = cursor.fetchone()
        if stats:
            hero_name, power, hp, immu, level, experience = stats
            return (f"–ò–º—è: {hero_name}\n"
                    f"–£—Ä–æ–≤–µ–Ω—å: {level}\n"
                    f"–û–ø—ã—Ç: {experience}\n"
                    f"—Å–∏–ª–∞: {power}\n"
                    f"–∑–¥–æ—Ä–æ–≤—å–µ: {hp}\n"
                    f"–∏–º–º—É–Ω–∏—Ç–µ—Ç: {immu}"
                    )
        else:
            return "–û—Ä–≥–∞–Ω–∏–∑–º –Ω–µ –Ω–∞–π–¥–µ–Ω."
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–º–∞: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–º–∞."

def gain_experience(us_id: int, amount: int, chat_id: int):
    """–ù–∞—á–∏—Å–ª—è–µ—Ç –æ–ø—ã—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂—É –∏ –ø–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ."""
    try:
        cursor.execute("SELECT experience, level, power, hp, immu, hero_name FROM test WHERE user_id=?", (us_id,))
        result = cursor.fetchone()
        if not result:
            bot.send_message(chat_id, "–û—Ä–≥–∞–Ω–∏–∑–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        experience, level, power, hp, immu, hero_name = result
        experience += amount

        level_up_threshold = level * 100
        while experience >= level_up_threshold:
            level += 1
            experience -= level_up_threshold
            level_up_threshold = level * 100

            power += 1
            hp += 5
            bot.send_message(chat_id, f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à –æ—Ä–≥–∞–Ω–∏–∑–º –¥–æ—Å—Ç–∏–≥ {level} —É—Ä–æ–≤–Ω—è!\n"
                                      f"–°–∏–ª–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞ –¥–æ {power}\n"
                                      f"–ó–¥–æ—Ä–æ–≤—å–µ —É–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ {hp}")

        cursor.execute("UPDATE test SET experience=?, level=?, power=?, hp=?, immu=? WHERE user_id=?",
                       (experience, level, power, hp, immu, us_id))

        conn.commit()
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –æ–ø—ã—Ç–∞: {e}")
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –æ–ø—ã—Ç–∞.")

def get_random_monster(player_level):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ –º–æ–Ω—Å—Ç—Ä–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    try:
        cursor.execute("SELECT COUNT(*) FROM monsters")
        count = cursor.fetchone()[0]
        random_id = random.randint(1, count)  # –°–ª—É—á–∞–π–Ω—ã–π id –º–æ–Ω—Å—Ç—Ä–∞

        cursor.execute(
            '''SELECT id, name, power_base, hp_base, immu_base, level_modifier, description, photo_url, experience_reward, hp_reward, immu_reward FROM monsters WHERE id = ?''',
            (random_id,))
        monster_data = cursor.fetchone()

        if monster_data:
            monster = Monster(id=monster_data[0], name=monster_data[1], power_base=monster_data[2],
                              hp_base=monster_data[3], immu_base=monster_data[4], level_modifier=monster_data[5],
                              description=monster_data[6], photo_url=monster_data[7], experience_reward=monster_data[8], hp_reward=monster_data[9], immu_reward=monster_data[10])
            monster.calculate_stats(player_level)
            return monster
        else:
            return None
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–æ–Ω—Å—Ç—Ä–∞ –∏–∑ –ë–î: {e}")
        return None

def create_explore_menu(chat_id):
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å'."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å')
    item2 = types.KeyboardButton('–ú–æ–π –æ—Ä–≥–∞–Ω–∏–∑–º')
    item3 = types.KeyboardButton('/menu')  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É /menu
    markup.add( item3, item1, item2)
    return markup  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º markup, –∞ –Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

def menu_view(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu."""
    chat_id = message.chat.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–º–∞ –≤—Å–µ–≥–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    item1 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–º')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–Ω –ª–∏ —É –∏–≥—Ä–æ–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–º
    if check_user_has_hero(message.from_user.id):
        # –ï—Å–ª–∏ –¥–∞, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        item2 = types.KeyboardButton('–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å')
        item3 = types.KeyboardButton('–ú–æ–π –æ—Ä–≥–∞–Ω–∏–∑–º')
        item4 = types.KeyboardButton('/top')  # –ö–Ω–æ–ø–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
        markup.add(item1, item2, item3, item4)
    else:
        markup.add(item1)

    bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É', reply_markup=markup)

def check_user_has_hero(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ—Ä–≥–∞–Ω–∏–∑–º (–ø–æ –Ω–∞–ª–∏—á–∏—é –∏–º–µ–Ω–∏ –≤ hero_names)."""
    try:
        cursor.execute("SELECT 1 FROM hero_names WHERE user_id = ? AND is_active = 1", (user_id,))
        result = cursor.fetchone()
        return result is not None
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞–ª–∏—á–∏—è –≥–µ—Ä–æ—è: {e}")
        return False

def create_hero(us_id: int, chat_id: int):
    """–°–æ–∑–¥–∞–µ—Ç –≥–µ—Ä–æ—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    msg = bot.send_message(chat_id, "–ö–∞–∫ –≤—ã –Ω–∞–∑–æ–≤–µ—Ç–µ —Å–≤–æ–π –æ—Ä–≥–∞–Ω–∏–∑–º?")
    bot.register_next_step_handler(msg, process_hero_name, us_id, chat_id)

def process_hero_name(message, us_id, chat_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–º—è –≥–µ—Ä–æ—è –∏ —Å–æ–∑–¥–∞–µ—Ç –µ–≥–æ."""
    hero_name = message.text
    try:
        power = random.randint(2, 6)
        hp = random.randint(10, 50)
        immu = random.randint(0, 3)

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –≥–µ—Ä–æ–µ (–µ—Å–ª–∏ –±—ã–ª)
        #cursor.execute("SELECT hero_name, level, experience, power, hp, immu FROM hero_names WHERE user_id = ? AND is_active = 1", (us_id,))
        cursor.execute("UPDATE hero_names SET is_active = 0 WHERE user_id = ? AND is_active = 1", (us_id,))

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –≥–µ—Ä–æ—è –≤ —Ç–∞–±–ª–∏—Ü—É hero_names
        cursor.execute("INSERT INTO hero_names (user_id, hero_name, experience, level, is_active, power, hp, immu) VALUES (?, ?, 0, 1, 1, ?, ?, ?)", (us_id, hero_name, power, hp, immu))

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ test —Å —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        cursor.execute("UPDATE test SET power=?, hp=?, immu=?, level=1, experience=0, hero_name=? WHERE user_id=?", (power, hp, immu, hero_name, us_id))
        conn.commit()

        #–û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é
        bot.send_message(chat_id, f"–û—Ä–≥–∞–Ω–∏–∑–º {hero_name} —Å–æ–∑–¥–∞–Ω!\n\n" + hero_stats(us_id), reply_markup=create_explore_menu(chat_id), parse_mode="Markdown")
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–µ—Ä–æ—è: {e}")
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–µ—Ä–æ—è.")

def is_valid_url(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º."""
    try:
        response = requests.head(url)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º HEAD-–∑–∞–ø—Ä–æ—Å –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞
        return response.status_code == 200
    except requests.exceptions.RequestException:
        return False

def jorney(us_id: int, chat_id: int) -> str:
    """–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è."""
    dice = random.randint(0, 20)
    try:
        # –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä–æ–∫–∞
        cursor.execute("SELECT level FROM test WHERE user_id=?", (us_id,))
        player_level = cursor.fetchone()[0]

        if dice in range(0, 3):
            attribute = random.choice(['power', 'hp', 'immu'])
            effect = random.randint(1, 3)

            cursor.execute(f"SELECT {attribute} FROM test WHERE user_id=?", (us_id,))
            score = cursor.fetchone()[0]

            if attribute == 'immu':
                effect = score // 3 + effect
            elif attribute == 'hp':
                effect *= 5

            attr = score - effect
            cursor.execute(f"UPDATE test SET {attribute}=? WHERE user_id=?", (attr, us_id))
            conn.commit()
            return (f"* –º—É—Ç–∞—Ü–∏—è! *\n"
                    f"-{effect} {attribute}")

        elif dice in range(3, 7):
            attribute = random.choice(['power', 'hp', 'immu'])
            effect = random.randint(1, 3)
            if attribute == 'hp':
                effect *= 10
            cursor.execute(f"SELECT {attribute} FROM test WHERE user_id=?", (us_id,))
            attr = cursor.fetchone()[0] + effect
            cursor.execute(f"UPDATE test SET {attribute}=? WHERE user_id=?", (attr, us_id))
            conn.commit()
            return (f"* —Ä–∞–∑–≤–∏—Ç–∏–µ! *\n"
                    f"+{effect} {attribute}")

        elif dice in range(7, 21):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∏–≥—Ä–æ–∫ —É–∂–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–æ—è
            if us_id in bot.battle_state and bot.battle_state[us_id]:
                bot.send_message(chat_id, "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –±–æ–π!")
                return ""

            bot.battle_state[us_id] = True

            # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –º–æ–Ω—Å—Ç—Ä–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            monster = get_random_monster(player_level)

            if not monster:
                bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–æ–Ω—Å—Ç—Ä–∞.")
                return ""

            cursor.execute("UPDATE test SET en_power=?, en_hp=?, en_immu=?, monster_type=? WHERE user_id=?",
                           (monster.power, monster.hp, monster.immu, monster.name, us_id))
            conn.commit()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            if is_valid_url(monster.photo_url):
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –º–æ–Ω—Å—Ç—Ä–∞
                bot.send_photo(chat_id, photo=monster.photo_url)
            else:
                bot.send_message(chat_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –º–æ–Ω—Å—Ç—Ä–∞ {monster.name}.")
            keyboard = types.InlineKeyboardMarkup()
            button = types.InlineKeyboardButton(text='–∞—Ç–∞–∫–æ–≤–∞—Ç—å!', callback_data='button_click_udar')
            keyboard.add(button)
            button2 = types.InlineKeyboardButton(text='—É–±–µ–∂–∞—Ç—å', callback_data='button_click_pobeg')
            keyboard.add(button2)

            bot.send_message(chat_id,
                             monster.get_description(),
                             reply_markup=keyboard, parse_mode="Markdown")
            return ""
        else:
            return "–ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ."
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–∏: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è."

def fight(us_id: int, chat_id: int):
    """–û–ø–∏—Å—ã–≤–∞–µ—Ç –±–æ–π."""
    try:
        keyboard = types.InlineKeyboardMarkup()
        button = types.InlineKeyboardButton(text='–∞—Ç–∞–∫–æ–≤–∞—Ç—å!', callback_data='button_click_udar')
        keyboard.add(button)
        button2 = types.InlineKeyboardButton(text='—É–±–µ–∂–∞—Ç—å', callback_data='button_click_pobeg')
        keyboard.add(button2)

        cursor.execute(
            "SELECT power, hp, immu, en_power, en_hp, en_immu FROM test WHERE user_id=?", (us_id,))
        stats = cursor.fetchone()

        if stats:
            power, hp, immu, en_power, en_hp, en_immu = stats

            cursor.execute("SELECT monster_type FROM test WHERE user_id=?", (us_id,))
            monster_type = cursor.fetchone()[0]

            bot.send_message(chat_id,
                             f"""–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: {monster_type}:\n
                    —Å–∏–ª–∞: {en_power}\n
                    –∑–¥–æ—Ä–æ–≤—å–µ: {en_hp}\n
                    –∏–º–º—É–Ω–∏—Ç–µ—Ç: {en_immu}\n\n
                << VS >>\n\n
            –í–∞—à –æ—Ä–≥–∞–Ω–∏–∑–º:\n
                    —Å–∏–ª–∞: {power}\n
                    –∑–¥–æ—Ä–æ–≤—å–µ: {hp}\n
                    –∏–º–º—É–Ω–∏—Ç–µ—Ç: {immu}""",
                             reply_markup=keyboard)
        else:
            bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–º–µ –∏–ª–∏ –º–æ–Ω—Å—Ç—Ä–µ.")
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –±–æ—é: {e}")
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –±–æ—è.")
    except Exception as e:
        print(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.")


def process_attack(us_id: int, chat_id: int, call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê—Ç–∞–∫–æ–≤–∞—Ç—å!"."""
    message_id = call.message.message_id  # –ü–æ–ª—É—á–∞–µ–º message_id

    try:
        cursor.execute(
            "SELECT power, hp, immu, en_power, en_hp, en_immu, monster_type, hero_name FROM test WHERE user_id=?",
            (us_id,))
        stats = cursor.fetchone()

        if not stats:
            bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–º–µ –∏–ª–∏ –º–æ–Ω—Å—Ç—Ä–µ.")
            return

        power, hp, immu, en_power, en_hp, en_immu, monster_type, hero_name = stats

        base_dodge_chance_player = immu / 100
        base_dodge_chance_monster = en_immu / 100

        player_damage = power
        if random.random() < 0.05:
            player_damage = power // 2  # –¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ
            bot.send_message(chat_id, "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–º–∞—Ö! –û—á–µ–Ω—å —Å–ª–∞–±—ã–π —É–¥–∞—Ä.")
        else:
            if random.random() < base_dodge_chance_monster:
                damage_reduction_amount = random.uniform(0.1, 0.5)
                player_damage = player_damage - int(player_damage * damage_reduction_amount) #–£–±–∏—Ä–∞–µ–º float
                bot.send_message(chat_id, "–°–æ–ø–µ—Ä–Ω–∏–∫ —á–∞—Å—Ç–∏—á–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∞—Ç–∞–∫—É!")
            else:
                if random.random() < 0.05:
                    player_damage = int(power * 1.5)  # –£–±–∏—Ä–∞–µ–º float
                    bot.send_message(chat_id, "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä! –û—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π —É–¥–∞—Ä!")

        monster_damage = en_power
        if random.random() < 0.05:
            monster_damage = en_power // 2  # –¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ
            bot.send_message(chat_id, "–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–¥–µ–ª–∞–ª –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–º–∞—Ö!")
        else:
            if random.random() < base_dodge_chance_player:
                damage_reduction_amount = random.uniform(0.1, 0.5)
                monster_damage = monster_damage - int(monster_damage * damage_reduction_amount)  # –£–±–∏—Ä–∞–µ–º float
                bot.send_message(chat_id, "–í—ã —á–∞—Å—Ç–∏—á–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –∞—Ç–∞–∫—É!")
            else:
                if random.random() < 0.05:
                    monster_damage = int(en_power * 1.5)  # –£–±–∏—Ä–∞–µ–º float
                    bot.send_message(chat_id, "–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –Ω–∞–Ω–µ—Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä!")

        hp -= monster_damage
        en_hp -= player_damage

        cursor.execute("UPDATE test SET hp=?, en_hp=? WHERE user_id=?", (hp, en_hp, us_id))
        conn.commit()

        #–û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute("UPDATE hero_names SET power=?, hp=?, immu=? WHERE hero_name = (SELECT hero_name FROM test WHERE user_id = ?) AND user_id=?", (power, hp, immu, us_id, us_id))
        conn.commit()

        bot.answer_callback_query(call.id, '–ê—Ç–∞–∫–∞!')

        bot.send_message(chat_id, f"–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {player_damage} —É—Ä–æ–Ω–∞.\n"
                                   f"–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –Ω–∞–Ω–µ—Å {monster_damage} —É—Ä–æ–Ω–∞.\n")

        # message_id = call.message.message_id #–ü–æ–ª—É—á–∞–µ–º message_id

        if en_hp <= 0:
            cursor.execute("SELECT monster_type FROM test WHERE user_id=?", (us_id,))
            monster_type = cursor.fetchone()[0]

            #–ü–û–õ–£–ß–ê–ï–ú ID –ú–û–ù–°–¢–†–ê
            cursor.execute("SELECT en_power, en_hp, en_immu, monster_type FROM test WHERE user_id=?", (us_id,))
            en_power, en_hp, en_immu, monster_type  = cursor.fetchone()

            #–î–û–°–¢–ê–ï–ú –ó–ù–ê–ß–ï–ù–ò–ï –†–ï–í–ê–†–î–ê
            cursor.execute("SELECT experience_reward, immu_reward, hp_reward FROM monsters WHERE name=?", (monster_type,))
            exp_reward, immu_reward, hp_reward  = cursor.fetchone()
            bot.send_message(chat_id, f'{monster_type} –ø–æ–≤–µ—Ä–∂–µ–Ω!\n'
                                       f'–ò–º–º—É–Ω–∏—Ç–µ—Ç +{immu_reward}\n'
                                       f'–ó–¥–æ—Ä–æ–≤—å–µ +{hp_reward}\n'
                                       f'–ü–æ–ª—É—á–µ–Ω–æ –æ–ø—ã—Ç–∞: +{exp_reward}')
            cursor.execute("UPDATE test SET immu=?, hp=? WHERE user_id=?", (immu + immu_reward, hp + hp_reward, us_id))
            conn.commit()

            gain_experience(us_id, exp_reward, chat_id)

            bot.battle_state[us_id] = False
            if str(us_id) + '_immu' in bot.battle_state:
                del bot.battle_state[str(us_id) + '_immu']
            #–£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            try:
                bot.delete_message(chat_id, message_id)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

        elif hp <= 0:
            bot.send_message(chat_id, '–í–∞—à –æ—Ä–≥–∞–Ω–∏–∑–º –ø–æ–≥–∏–±. –ü–æ—Ä–∞ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ!')
            markup = types.InlineKeyboardMarkup()
            button = types.InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–º', callback_data='create_hero')
            markup.add(button)

            bot.battle_state[us_id] = False
            if str(us_id) + '_immu' in bot.battle_state:
                del bot.battle_state[str(us_id) + '_immu']
            #–£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            try:
                bot.delete_message(chat_id, message_id)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            #–ø–æ–º–µ—á–∞–µ–º —Å—Ç–∞—Ä–æ–≥–æ –∫–∞–∫ –º–µ—Ä—Ç–≤–æ–≥–æ
            #cursor.execute("UPDATE hero_names SET is_active = 0 WHERE user_id = (SELECT user_id FROM test WHERE user_id = ?) AND hero_name = (SELECT hero_name FROM test WHERE user_id = ?)", (us_id, us_id))
            cursor.execute("UPDATE hero_names SET is_active = 0 WHERE hero_name = (SELECT hero_name FROM test WHERE user_id = ?) AND user_id=?", (us_id, us_id))

            conn.commit()
            menu_view(call.message) #–æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é
            bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)

        else:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            try:
                bot.delete_message(chat_id, message_id)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

            fight(us_id, chat_id)

    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—Ç–∞–∫–∏: {e}")
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∞—Ç–∞–∫–∏.")
    except Exception as e:
        print(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.")


def process_escape(us_id: int, chat_id: int, call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–£–±–µ–∂–∞—Ç—å"."""
    try:
        cursor.execute("SELECT immu FROM test WHERE user_id=?", (us_id,))
        immu = cursor.fetchone()[0]
        message_id = call.message.message_id  # ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è

        bot.answer_callback_query(call.id, '–ü–æ–±–µ–≥!')
        bot.send_message(chat_id, '–í—ã –∏–∑–±–µ–∂–∞–ª–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è, –Ω–æ –ø–æ—Ç–µ—Ä—è–ª–∏ 1 –∏–º–º—É–Ω–∏—Ç–µ—Ç.')
        cursor.execute("UPDATE test SET immu=? WHERE user_id=?", (immu - 1, us_id))
        conn.commit()

        bot.battle_state[us_id] = False

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∏—Ç–≤–µ
        try:
            bot.delete_message(chat_id, message_id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–±–µ–∂–∞—Ç—å: {e}")
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø–æ–±–µ–≥–∞.")
    except Exception as e:
        print(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.")

# ========================= –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–û–ë–©–ï–ù–ò–ô =========================

@bot.message_handler(commands=['start'])
def start_message(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    chat_id = message.chat.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item = types.KeyboardButton('–ù–∞—á–∞–ª–∏!')
    markup.add(item)
    bot.send_message(chat_id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Bio-Game!\n"
                     "–ú–∏–Ω–∏-–∏–≥—Ä–∞ –æ –º–∏–∫—Ä–æ–º–∏—Ä–µ, –≤—ã–∂–∏–≤–∞–Ω–∏–∏ –∏ —ç–≤–æ–ª—é—Ü–∏–∏.\n"
                     "–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ—Å—å –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å!",
                     reply_markup=markup)


@bot.message_handler(commands=['menu'])
def menu_view(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu."""
    chat_id = message.chat.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–º–∞ –≤—Å–µ–≥–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    item1 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–º')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–Ω –ª–∏ —É –∏–≥—Ä–æ–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–º
    if check_user_has_hero(message.from_user.id):
        # –ï—Å–ª–∏ –¥–∞, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        item2 = types.KeyboardButton('–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å')
        item3 = types.KeyboardButton('–ú–æ–π –æ—Ä–≥–∞–Ω–∏–∑–º')
        item4 = types.KeyboardButton('/top')  # –ö–Ω–æ–ø–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
        markup.add(item1, item2, item3, item4)
    else:
        markup.add(item1)

    bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É', reply_markup=markup)


@bot.message_handler(commands=['top'])
def show_top_rating(message):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É."""
    try:
        cursor.execute("""
            SELECT
                hn.hero_name,
                t.level,
                t.power,
                t.hp,
                t.immu,
                (t.level * 1000) + t.experience AS rating
            FROM hero_names hn
            JOIN test t ON hn.user_id = t.user_id
            WHERE hn.is_active = 1
            ORDER BY rating DESC
            LIMIT 10
        """)
        top_players = cursor.fetchall()

        if not top_players:
            bot.send_message(message.chat.id, "–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞.")
            return

        response = "üèÜ *–¢–æ–ø-10 –æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤* üèÜ\n\n"
        for i, (hero_name, level, power, hp, immu, rating) in enumerate(top_players):
            response += (f"{i + 1}. *{hero_name}* (lvl: {level})\n"
                         f"   power: {power}, hp: {hp}, immu: {immu}\n")

        bot.send_message(message.chat.id, response, parse_mode="Markdown")

    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞: {e}")
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞.")



# ========================= –û–ë–†–ê–ë–û–¢–ß–ò–ö CALLBACK-–ó–ê–ü–†–û–°–û–í =========================

@bot.callback_query_handler(func=lambda call: call.data == 'create_hero')
def create_hero_callback(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"."""
    us_id = call.message.chat.id
    chat_id = call.message.chat.id
    bot.answer_callback_query(call.id, "–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ—Ä–≥–∞–Ω–∏–∑–º...")

    bot.edit_message_reply_markup(chat_id=chat_id, message_id=call.message.message_id, reply_markup=None)
    create_hero(us_id, chat_id)


@bot.callback_query_handler(func=lambda call: True)
def handle_query(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤."""
    us_id = call.message.chat.id
    chat_id = call.message.chat.id

    if call.data == 'button_click_udar':
        process_attack(us_id, chat_id, call)
    elif call.data == 'button_click_pobeg':
        process_escape(us_id, chat_id, call)


# ========================= –û–ë–†–ê–ë–û–¢–ß–ò–ö –¢–ï–ö–°–¢–û–í–´–• –°–û–û–ë–©–ï–ù–ò–ô =========================

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    chat_id = message.chat.id
    us_id = message.from_user.id
    username = message.from_user.username

    if message.text.lower() == '–Ω–∞—á–∞–ª–∏!':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item = types.KeyboardButton(r'/menu')
        markup.add(item)
        bot.send_message(chat_id, '–û—Ç–ª–∏—á–Ω–æ, –≤—ã –≥–æ—Ç–æ–≤—ã –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º!',
                         reply_markup=markup)

        us_name = message.from_user.first_name
        us_sname = message.from_user.last_name

        if check_user_exists(username):
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        else:
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î.")
            db_table_val(user_id=us_id, user_name=us_name, user_surname=us_sname, username=username, chat_id=chat_id)

    elif message.text == '–°–æ–∑–¥–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–º':
            create_hero(us_id, chat_id)
            # menu_view(message) #–û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è
    elif message.text == '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å':
        if us_id in bot.battle_state and bot.battle_state[us_id]:
            bot.send_message(chat_id, "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–µ–µ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ!")
        else:
            bot.send_message(chat_id, jorney(us_id, chat_id), reply_markup=create_explore_menu(
                chat_id))  # journey –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–µ–Ω—é
    elif message.text == '–ú–æ–π –æ—Ä–≥–∞–Ω–∏–∑–º':
        bot.send_message(chat_id, hero_stats(us_id))


# ========================= –ó–ê–ü–£–°–ö –ë–û–¢–ê =========================

try:
    bot.polling(none_stop=True)
except Exception as e:
    print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
finally:
    conn.close()
    print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ.")